
package VIEW;

import DAO.EstoqueDAO;
import DAO.EntradaDAO;
import DTO.EntradaDTO;
import DTO.EstoqueDTO;
import java.awt.event.FocusAdapter;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;

import javax.swing.event.DocumentListener;
import java.sql.PreparedStatement;
import java.sql.DriverManager;

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;

import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;

import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author jateixeira
 */
public class TelaEntradaView extends javax.swing.JFrame {

    
    
    
    private DefaultComboBoxModel<String> modelComboBox;
      private Connection connection;

    private JComboBox<String> comboBox;
    private DefaultComboBoxModel<String> modelLocalBox;
    


    /**
     * Creates new form TelaEntradaView
     */
    public TelaEntradaView() throws SQLException {
        
        initComponents();
        setLocationRelativeTo(null);
        initializeDatabaseConnection();
        
        // Inicializa o modelo do JComboBox
       modelLocalBox = new DefaultComboBoxModel<>();
        modelComboBox = new DefaultComboBoxModel<>();
        NomeMatsBox.setModel(modelComboBox);
        NomeMatsBox.setModel(modelLocalBox);
        comboBox = new JComboBox<>();
 
        setupAutocomplete();
        populateComboBox();
        updateTextFields();
        
        
        
        AutoCompleteDecorator.decorate(NomeMatsBox);
        AutoCompleteDecorator.decorate(NomeMatsBox);
        

        NomeMatsBox.setSelectedIndex(-1);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        CodigoTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        QuantidadeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NomeMatsBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        DataBox = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        EntradaBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        CodigoTxt2 = new javax.swing.JTextField();
        DataTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela de Entrada");
        setLocation(new java.awt.Point(0, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("CÓDIGO MATERIAL:");

        CodigoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoTxtActionPerformed(evt);
            }
        });

        jLabel4.setText("QUANTIDADE:");

        jLabel2.setText("NOME MATERIAL:");

        NomeMatsBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "teste1", "teste 2" }));
        NomeMatsBox.setSelectedIndex(-1);
        NomeMatsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeMatsBoxActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setText("CADASTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        try {
            DataBox.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setText("SOLICITANTE:");

        EntradaBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sérgio", "Douglas", "Jeferson", "Luiz Carlos" }));
        EntradaBox.setSelectedIndex(-1);

        jLabel6.setText("DATA:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NomeMatsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(CodigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(QuantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(110, 110, 110)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(EntradaBox, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(287, 287, 287))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(DataBox, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CodigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NomeMatsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EntradaBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QuantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(33, 33, 33))
        );

        jButton3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton3.setText("VOLTAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código Material", "Nome Material", "Quantidade", "Responsável", "Data"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(102, 204, 255));
        jButton2.setText("CONSULTAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Código:");

        jLabel8.setText("Responsável:");

        jLabel9.setText("Data:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sérgio", "Douglas", "Jeferson", "Luiz Carlos" }));
        jComboBox1.setSelectedIndex(-1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CodigoTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(DataTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CodigoTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(DataTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit.png"))); // NOI18N
        jLabel1.setText("CADASTRO DE ENTRADA:");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/query_icon_216695.png"))); // NOI18N
        jLabel10.setText("CONSULTA DE ENTRADA:");

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pref png1.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setFocusPainted(false);
        jButton4.setFocusable(false);
        jButton4.setRequestFocusEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(392, 392, 392)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(396, 396, 396))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(322, 322, 322))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton3)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       TelaMenuView menu = new TelaMenuView();
       menu.setVisible(true);
       
       this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
        
        String Codigo_item, NomeItem, QuemRecebeu, Data;
        Integer Quantidade;
        
        Codigo_item = CodigoTxt.getText();
        NomeItem = (String) NomeMatsBox.getSelectedItem();
        Quantidade = Integer.parseInt(QuantidadeTxt.getText());
        QuemRecebeu = (String) EntradaBox.getSelectedItem();
        Data = DataBox.getText();
        
        EntradaDTO entradadto = new EntradaDTO();
        
        entradadto.setCodigo_item(Codigo_item);
        entradadto.setNomeItem(NomeItem);
        entradadto.setQuantidade(Quantidade);
        entradadto.setQuemRecebeu(QuemRecebeu);
        entradadto.setData_entrada(Data);
        
        
       EntradaDAO entradadao = new EntradaDAO();
       entradadao.CadastrarEntrada(entradadto);
       
       JOptionPane.showMessageDialog(null, "cadastro realizado com sucesso!");
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "EntradaView" + e);
        }
        
        CodigoTxt.setText("");
        NomeMatsBox.setSelectedIndex(-1);
        QuantidadeTxt.setText("");
        EntradaBox.setSelectedIndex(-1);
        DataBox.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CodigoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodigoTxtActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       ListarMedicoes();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        TelaMenuView menu = new TelaMenuView();
        menu.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void NomeMatsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeMatsBoxActionPerformed
        SwingUtilities.invokeLater(() -> {
            updateTextFields();
        });
    }//GEN-LAST:event_NomeMatsBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEntradaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaEntradaView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaEntradaView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CodigoTxt;
    private javax.swing.JTextField CodigoTxt2;
    private javax.swing.JFormattedTextField DataBox;
    private javax.swing.JTextField DataTxt;
    private javax.swing.JComboBox<String> EntradaBox;
    private javax.swing.JComboBox<String> NomeMatsBox;
    private javax.swing.JTextField QuantidadeTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    private void initializeDatabaseConnection() throws SQLException {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/projetoestoque?serverTimezone=America/Sao_Paulo", "root", "1234");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            throw new SQLException("MySQL Driver not found.");
        }
    }
    
    
    private boolean isUpdating = false; // Flag para controlar atualizações

private void setupAutocomplete() {
    if (NomeMatsBox.getEditor() != null) {
        JTextField textField = (JTextField) NomeMatsBox.getEditor().getEditorComponent();
        textField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateAutocomplete();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateAutocomplete();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateAutocomplete();
            }
        });
    }

    QuantidadeTxt.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            updateSubtotal();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            updateSubtotal();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            updateSubtotal();
        }
    });

    CodigoTxt.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            updateNomeItem();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            updateNomeItem();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            updateNomeItem();
        }
    });

    FocusAdapter focusAdapter = new FocusAdapter() {
        @Override
        public void focusGained(java.awt.event.FocusEvent evt) {
            updateNomeItem();
        }
    };

    NomeMatsBox.addFocusListener(focusAdapter);
    // Adicione outros campos, se necessário
}

//pesquisa no combobox
private void updateAutocomplete() {
    JTextField textField = (JTextField) comboBox.getEditor().getEditorComponent();
    String inputText = textField.getText();

    if (inputText == null || inputText.trim().isEmpty()) {
        modelComboBox.removeAllElements();
        populateComboBox();
        return;
    }

    Set<String> uniqueSuggestions = new HashSet<>();

    // Use invokeLater para evitar o IllegalStateException
    SwingUtilities.invokeLater(() -> {
        modelComboBox.removeAllElements(); // Limpe o modelo dentro do invokeLater

        try {
            String query = "SELECT NomeItem FROM Materiais WHERE NomeItem LIKE ?";
            PreparedStatement stmt = connection.prepareStatement(query);
            stmt.setString(1, "%" + inputText + "%");
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                String suggestion = rs.getString("NomeItem");
                if (uniqueSuggestions.add(suggestion)) {
                    modelComboBox.addElement(suggestion);
                }
            }

            textField.setText(inputText);
            comboBox.showPopup(); // Exibe a lista de sugestões
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao atualizar autocomplete: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    });
}


//preenche o combobox com dados do banco de dados
private void populateComboBox() {
    try {
        String query = "SELECT NomeItem FROM materiais_estoque";
        PreparedStatement stmt = connection.prepareStatement(query);
        ResultSet rs = stmt.executeQuery();

        DefaultComboBoxModel<String> modelComboBox = (DefaultComboBoxModel<String>) NomeMatsBox.getModel();

        while (rs.next()) {
                String item = rs.getString("NomeItem");
                boolean itemExists = false;

                // Verifica se o item já está presente no modelo
                for (int i = 0; i < modelComboBox.getSize(); i++) {
                    if (modelComboBox.getElementAt(i).equals(item)) {
                        itemExists = true;
                        break;
                    }
                }

                // Adiciona o item ao modelo se ele não existir
                if (!itemExists) {
                    modelComboBox.addElement(item);
                }
            }
        
        rs.close();
        stmt.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao popular combo box: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

//codigo responsavel por preencher o combobox com base na textfield
private void updateNomeItem() {
    String selectedItem = CodigoTxt.getText().trim();

    if (selectedItem.length() >= 1) {
        try {
            String query = "SELECT NomeItem FROM materiais_estoque WHERE CódigoItem = ?";
            PreparedStatement stmt = connection.prepareStatement(query);
            stmt.setString(1, selectedItem);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                NomeMatsBox.setSelectedItem(rs.getString("NomeItem"));
                
            } else {
                NomeMatsBox.setSelectedItem(null); // Limpa o campo se não houver resultado
            }

            rs.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar campos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    updateSubtotal();
}

private void updateSubtotal() {
    
}

//codigo responsavel por preencher o textfield com base na combobox
 private void updateTextFields() {
    String selectedItem = (String) NomeMatsBox.getSelectedItem();
    if (selectedItem != null) {
       
        try {
            String query = "SELECT CódigoItem FROM materiais_estoque WHERE NomeItem = ?;";
            PreparedStatement stmt = connection.prepareStatement(query);
            stmt.setString(1, selectedItem);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                
                CodigoTxt.setText(rs.getString("CódigoItem"));
                
            } else {
                
                System.out.println("ResultSet is empty"); // Debug
               CodigoTxt.setText("");
           
            }

            rs.close();
            stmt.close();

            // Atualiza o subtotal após qualquer alteração
            updateSubtotal(); // Sempre chama aqui

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating text fields: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        System.out.println("No item selected"); // Debug
        // Atualiza o subtotal, definindo como 0 se não houver seleção
        updateSubtotal(); // Chama também aqui
    }
}
 
 private void ListarMedicoes() {
        
    EntradaDAO entrada =  new EntradaDAO();
    
    // Configuração do modelo da tabela
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setNumRows(0); // Limpa as linhas da tabela
    
    // Obtém o valor do campo de texto e remove espaços em branco
    
    
    String CodigoItem = CodigoTxt2.getText();
    String QuemRecebeu = (String) jComboBox1.getSelectedItem();
    String Data = DataTxt.getText();
    
    
    System.out.println("Valor do campo Endereco: '" + CodigoItem + "'");
    System.out.println("Valor do campo OS: '" + QuemRecebeu + "'");
    System.out.println("Valor do campo OS: '" + Data + "'");
    
    try {
        // Consulta os dados com base no valor de OS
        List<EntradaDTO> lista = entrada.ConsultarEntrada(CodigoItem, QuemRecebeu,Data);
        
        // Verifica se a lista está vazia
        

        // Adiciona os dados ao modelo da tabela
        for (int i = 0;i < lista.size(); i++) {
            model.addRow(new Object[]{

                lista.get(i).getCodigo_item(),
                lista.get(i).getNomeItem(),
                lista.get(i).getQuantidade(),
                lista.get(i).getData_entrada(),
                lista.get(i).getQuemRecebeu(),
  
            });
        }
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhum dado encontrado para o endereço fornecido.");
        } else {
            System.out.println("Dados encontrados: " + lista.size());
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao consultar dados: " + e.getMessage());
        e.printStackTrace();
    }
    }
}